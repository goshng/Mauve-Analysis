#!/usr/bin/perl

#===============================================================================
#   Author: Sang Chul Choi, BSCB @ Cornell University, NY
#
#   File: list-locus-tag-go-jcvi-role.pl
#   Date: 2011-02-25
#   Version: 1.0.0
#
#   Usage:
#      perl list-locus-tag-go-jcvi-role.pl [options]
#
#      Try 'perl list-locus-tag-go-jcvi-role.pl -h' for more information.
#
#   Purpose: list-locus-tag-go-jcvi-role.pl help you to find gene ontologies and
#            JCVI roles of locus tags of S. pyogenes M3 strain.
#
#   Note that I started to code this based on PRINSEQ by Robert SCHMIEDER at
#   Computational Science Research Center @ SDSU, CA as a template. Some of
#   words are his not mine, and credit should be given to him. 
#===============================================================================

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use File::Temp qw(tempfile);
use XML::Parser;

$| = 1; # Do not buffer output

my $VERSION = 'list-locus-tag-go-jcvi-role.pl 1.0.0';

my $man = 0;
my $help = 0;
my $perblock = 0;
my %params = ('help' => \$help, 'h' => \$help, 'man' => \$man, 'perblock' => \$perblock);        
GetOptions( \%params,
            'help|h',
            'man',
            'verbose',
            'version' => sub { print $VERSION."\n"; exit; },
            'bcpRoleLink=s',
            'bcpGoRoleLink=s',
            'locusTagToJcviLocus=s'
            ) or pod2usage(2);
pod2usage(1) if $help;
pod2usage(-exitstatus => 0, -verbose => 2) if $man;

=head1 NAME

list-locus-tag-go-jcvi-role.pl - List locus tags and their gene annotations

=head1 VERSION

list-locus-tag-go-jcvi-role.pl 1.0.0

=head1 SYNOPSIS

perl list-locus-tag-go-jcvi-role.pl.pl [-h] [-help] [-version] [-man] [-verbose] 
  [-bcpRoleLink bcp_role_link]
  [-bcpGoRoleLink bcp_go_role_link]
  [-locusTagToJcviLocus get-primary-jcvi-loci.txt] 

=head1 DESCRIPTION

list-locus-tag-go-jcvi-role.pl help you to find gene ontologies and
JCVI roles of locus tags of S. pyogenes M3 strain.

=head1 OPTIONS

=over 8

=item B<-help> | B<-h>

Print the help message; ignore other arguments.

=item B<-man>

Print the full documentation; ignore other arguments.

=item B<-version>

Print program version; ignore other arguments.

=item B<-verbose>

Prints status and info messages during processing.

=item B<***** INPUT OPTIONS *****>


=item B<-bcpRoleLink> <file>

File bcp_role_link can be downloaded at
ftp://ftp.jcvi.org//pub/data/Omniome_Database/tab_delimited_omniome

=item B<-bcpGoRoleLink> <file>

File bcp_go_role_link can be downloaded at
ftp://ftp.jcvi.org//pub/data/Omniome_Database/tab_delimited_omniome

=item B<-locusTagToJcviLocus> <file>

File get-primary-jcvi-loci.txt contains locus tags and their JCVI loci. This
can be generated by get-primary-jcvi-loci.pl.

=back

=head1 AUTHOR

Sang Chul Choi, C<< <goshng_at_yahoo_dot_co_dot_kr> >>

=head1 BUGS

If you find a bug please post a message rnaseq_analysis project at codaset dot
com repository so that I can make list-locus-tag-go-jcvi-role.pl better.

=head1 COPYRIGHT

Copyright (C) 2011  Sang Chul Choi

=head1 LICENSE

This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.

=cut

################################################################
# Input command options
################################################################

my $bcpRoleLinkFilename;
my $bcpGoRoleLinkFilename;
my $locusTagToJcviLocusFilename;
if (exists $params{bcpRoleLink})
{
  $bcpRoleLinkFilename = $params{bcpRoleLink};
} else {
  &printError("you did not specify an bcp_role_link");
}

if (exists $params{bcpGoRoleLink})
{
  $bcpGoRoleLinkFilename = $params{bcpGoRoleLink};
} else {
  &printError("you did not specify an bcp_go_role_link");
}

if (exists $params{locusTagToJcviLocus})
{
  $locusTagToJcviLocusFilename = $params{locusTagToJcviLocus};
} else {
  &printError("you did not specify an get-primary-jcvi-loci.txt");
}

################################################################
# Main
################################################################

sub find_gene_categories ($);
sub find_jcvi_categories ($);

open LOCUSTAGJCVILOCUS, $locusTagToJcviLocusFilename 
  or die "$locusTagToJcviLocusFilename: $!";
while (<LOCUSTAGJCVILOCUS>)
{
  next if /^#/;
  chomp;
  my ($locus_tag, $jcviLocus) = split /:/;
  # Find gene ontology categories.
  my @geneCategories = find_gene_categories ($jcviLocus);
  # Find JCVI role categories.
  my @jcviCategories = find_jcvi_categories ($jcviLocus);
  print join ';', $locus_tag, @geneCategories, @jcviCategories; 
  print "\n"; 
}
close (LOCUSTAGJCVILOCUS);
exit;

#################################################################################
### Main FUNCTIONS
#################################################################################

sub find_gene_categories ($)
{
  my ($jcviLocus) = @_;
  my @roles;
  open GOROLELINK, $bcpGoRoleLinkFilename 
    or die "$bcpGoRoleLinkFilename:$!";
  while (<GOROLELINK>)
  {
    if (/$jcviLocus\s+(GO:\d+)/)
    {
      push @roles, $1;
    }
  }
  close (GOROLELINK);
  return @roles;
}

sub find_jcvi_categories ($)
{
  my ($jcviLocus) = @_;
  my @roles;
  open JCVIROLELINK, $bcpRoleLinkFilename 
    or die "$bcpRoleLinkFilename:$!";
  while (<JCVIROLELINK>)
  {
    if (/$jcviLocus\s+(\d+)/)
    {
      push @roles, $1;
    }
  }
  close (JCVIROLELINK);
  return @roles;
}


##
#################################################################################
### MISC FUNCTIONS
#################################################################################
##

sub printError {
    my $msg = shift;
    print STDERR "ERROR: ".$msg.".\n\nTry \'list-locus-tag-go-jcvi-role.pl -h\' for more information.\nExit program.\n";
    exit(0);
}

sub getLineNumber {
    my $file = shift;
    my $lines = 0;
    open(FILE,"perl -p -e 's/\r/\n/g' < $file |") or die "ERROR: Could not open file $file: $! \n";
    $lines += tr/\n/\n/ while sysread(FILE, $_, 2 ** 16);
    close(FILE);
    return $lines;
}


sub checkFileFormat {
    my $file = shift;

    open(FILE,"perl -p -e 's/\r/\n/g' < $file |") or die "ERROR: Could not open file $file: $! \n";
    while (<FILE>) {
    }
    close(FILE);

    my $format = 'map';
    return $format;
}

